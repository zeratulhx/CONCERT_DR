% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmap_subset.R
\name{extract_cmap_data_from_siginfo}
\alias{extract_cmap_data_from_siginfo}
\title{Extract CMap Data Using Siginfo File Directly}
\usage{
extract_cmap_data_from_siginfo(
  siginfo_file = "siginfo_beta.txt",
  geneinfo_file = "geneinfo_beta.txt",
  gctx_file = "level5_beta_trt_cp_n720216x12328.gctx",
  max_signatures = NULL,
  filter_quality = TRUE,
  keep_all_genes = TRUE,
  verbose = TRUE,
  landmark = TRUE
)
}
\arguments{
\item{siginfo_file}{Path to the signature info file (can be original or pre-filtered)}

\item{geneinfo_file}{Path to the gene info file}

\item{gctx_file}{Path to the GCTX file}

\item{max_signatures}{Integer; maximum number of signatures to process (default: NULL for all)}

\item{filter_quality}{Logical; whether to filter for pert_type="trt_cp" and is_hiq=1 (default: TRUE)}

\item{keep_all_genes}{Logical; whether to keep all genes (TRUE) or only common genes (FALSE) (default: TRUE)}

\item{verbose}{Logical; whether to print progress messages (default: TRUE)}
}
\value{
A data frame with expression data for all signatures, with annotation
        columns indicating sample metadata. Metadata is stored as an attribute.
}
\description{
Extract expression data from CMap GCTX files using all signatures
present in the provided siginfo file. This function processes all signatures
found in the siginfo file without requiring a configuration file.
}
\examples{
\dontrun{
# Example 1: Use the original siginfo_beta.txt directly
reference_df <- extract_cmap_data_from_siginfo(
  siginfo_file = "path/to/siginfo_beta.txt",
  geneinfo_file = "path/to/geneinfo_beta.txt",
  gctx_file = "path/to/level5_beta_trt_cp_n720216x12328.gctx"
)

# Example 2: Use a pre-filtered siginfo file
# First filter the siginfo
filtered_sig <- subset_siginfo_beta(
  "siginfo_beta.txt",
  interactive = FALSE,
  filters = list(
    pert_type = "trt_cp",
    pert_itime = c("6 h", "24 h"),
    pert_idose = "10 uM",
    cell_iname = c("A375", "MCF7")
  )
)
write.table(filtered_sig, "filtered_siginfo.txt", sep="\t", row.names=FALSE, quote=FALSE)

# Then use the filtered siginfo
reference_df <- extract_cmap_data_from_siginfo(
  siginfo_file = "filtered_siginfo.txt",
  geneinfo_file = "path/to/geneinfo_beta.txt",
  gctx_file = "path/to/level5_beta_trt_cp_n720216x12328.gctx",
  filter_quality = FALSE  # Already filtered
)

# Example 3: Process only first 5000 signatures for testing
reference_df <- extract_cmap_data_from_siginfo(
  siginfo_file = "path/to/siginfo_beta.txt",
  geneinfo_file = "path/to/geneinfo_beta.txt",
  gctx_file = "path/to/level5_beta_trt_cp_n720216x12328.gctx",
  max_signatures = 5000
)

# Access the metadata
metadata <- attr(reference_df, "metadata")
table(metadata$cell)
table(metadata$time, metadata$dose)
}

}
